class Dollar:
    def __init__(self, dollar=0, cents=0):
        self.dollar = dollar + cents//100
        self.cents = cents%100

    def getdollar(self):
        return self.dollar

#removed the second "self" from getcents
    def getcents(self):
        return self.cents

#without this function, it was not displaying the array so I needed to add this
    def __repr__(self):
        return str(self)

    def __add__(self, right):
        cents = self.cents + right.cents
        dollars = self.dollar + right.dollar
        if cents >= 100:
            cents -= 100
            dollars += 1

        if type(self) == USD:
            return USD(dollars, cents)
        if type(self) == CAD:
            return CAD(dollars, cents)
        if type(self) == AUD:
            return AUD(dollars, cents)

    def __sub__(self, right):
        if type(self) == type(right):
            cents = self.cents - right.cents
            dollars = self.dollar - right.dollar
            if cents < 0:
                cents += 100
                dollars -= 1

            if type(self) == USD:
                return USD(dollars, cents)
            if type(self) == CAD:
                return CAD(dollars, cents)
            if type(self) == AUD:
                return AUD(dollars, cents)

    def __eq__(self, right):
        return self.dollar == right.dollar and self.cents == right.cents

    def __lt__(self, right):
        if self.dollar < right.dollar:
            return True
        elif self.dollar == right.dollar:
            return self.cents < right.cents
        else:
            return False

    def __str__(self):
        if type(self) == USD:
            dollar = "USD"
        if type(self) == CAD:
            dollar = "CAD"
        if type(self) == AUD:
            dollar = "AUD"
        return f"{self.dollar} {dollar} and {self.cents} cents"


# walle add call dollars add
#
class USD(Dollar):
    def __init__(self, dollar=0, cents=0):
        Dollar.__init__(self, dollar, cents)
        self.country = "United States"


class CAD(Dollar):
    def __init__(self, dollar=0, cents=0):
        Dollar.__init__(self, dollar, cents)
        self.country = "Canada"


class AUD(Dollar):
    def __init__(self, dollar=0, cents=0):
        Dollar.__init__(self, dollar, cents)
        self.country = "Australia"


class Wallet():
    def __init__(self):
        self.amount_USD = USD()
        self.amount_CAD = CAD()
        self.amount_AUD = AUD()

    def __add__(self, right):
        self.amount_USD = self.amount_USD + right.amount_USD
        self.amount_CAD = self.amount_CAD + right.amount_CAD
        self.amount_AUD = self.amount_AUD + right.amount_AUD

    def __sub__(self, right):
        self.amount_USD = self.amount_USD - right.amount_USD
        self.amount_CAD = self.amount_CAD - right.amount_CAD
        self.amount_AUD = self.amount_AUD - right.amount_AUD

    def __lt__(self, right):
        if self.amount_USD < right.amount_USD:
            return True

        if self.amount_CAD < right.amount_CAD:
            return True

        if self.amount_AUD < right.amount_AUD:
            return True

        else:
            return False

    def __eq__(self,right):
        if self.amount_USD == right.amount_USD:
            if self.amount_CAD == right.amount_CAD:
                if self.amount_AUD == right.amount_AUD:
                    return True
        return False

    def __str__(self):
        return f"{self.amount_USD} and {self.amount_CAD} and {self.amount_AUD}"


if __name__ == "__main__":
    y = AUD()
    x = USD(0, 99)
    z = CAD()

    w = USD(1, 1)

    a = x + w
    print(f"${a.dollar}, {a.cents}")

    print(y.country)
    print(x.country)
    print(z.country)

    y.dollar = 0
    c.dollar(USD)
    H.dollare(CAD)
